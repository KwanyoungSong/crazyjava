<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="false" scanPeriod="30 seconds"> 
	
	<!-- 변수 지정 -->
	<property name="LOG_PATH" value="C:/var/log/smartvision/videoCapture" />
	<property name="LOG_SYSTEM_PATH_NM" value="${LOG_PATH}/videoCapture_system.log" />
	<property name="LOG_SQL_PATH_NM" value="${LOG_PATH}/videoCapture_sql.log" />
	<property name="LOG_PATH_NM" value="${LOG_PATH}/videoCapture.log" />
	
	<!-- FILE System Appender -->
	<appender name="File-System-Appender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_SYSTEM_PATH_NM}</file>
		<!-- 일자별로 로그파일 적용하기 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_SYSTEM_PATH_NM}.%d{yyyyMMdd}</fileNamePattern>
			<maxHistory>30</maxHistory> <!-- 일자별 백업파일의 보관기간 -->
			<totalSizeCap>300MB</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%F]%M\(%L\) : %m%n</pattern>
		</encoder>
	</appender>
	
	<!-- FILE Sql Appender -->
	<appender name="File-Sql-Appender" class="ch.qos.logback.core.rolling.RollingFileAppender">
	    <filter class="ch.qos.logback.classic.filter.LevelFilter"> 
            <level>DEBUG</level> 
            <onMatch>ACCEPT</onMatch> 
            <onMismatch>DENY</onMismatch>
        </filter>
		<file>${LOG_SQL_PATH_NM}</file>
		<!-- 일자별로 로그파일 적용하기 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_SQL_PATH_NM}.%d{yyyyMMdd}</fileNamePattern>
			<maxHistory>30</maxHistory> <!-- 일자별 백업파일의 보관기간 -->
			<totalSizeCap>300MB</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%F]%M\(%L\) : %m%n</pattern>
		</encoder>
	</appender>
	
	<!-- FILE Sql Appender -->
	<appender name="File-Appender" class="ch.qos.logback.core.rolling.RollingFileAppender">
	    <filter class="ch.qos.logback.classic.filter.LevelFilter"> 
            <level>INFO</level> 
        </filter>
		<file>${LOG_PATH_NM}</file>
		<!-- 일자별로 로그파일 적용하기 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH_NM}.%d{yyyyMMdd}</fileNamePattern>
			<maxHistory>30</maxHistory> <!-- 일자별 백업파일의 보관기간 -->
			<totalSizeCap>300MB</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%F]%M\(%L\) : %m%n</pattern>
		</encoder>
	</appender>
	
	<!-- Console Log Appender -->
	<appender name="Console-Appender" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>
				<!--
				%d{yyyy-MM-dd HH:mm:ss} : 년월일 시분초
				%thread : thread name 
				%-5level : log level , -5는 출력 고정폭 값
				%logger{length} :Logger name의 이름, {length}는 자리수
				%msg : log message %message은 alias
				%n : 줄바꿈
	
				org.fusesource.jansi:jansi:1.8 가 필요함.
						Linux ,Mac OS X 기본적으로 지원함
						<withJansi>true</withJansi>설정후 사용해야함
				%highlight : log level 별로 color가 다르게 나옴
				
				<pattern>%d{yyyy-MM-dd HH:mm:ss} [%-5p] [%F]%M\(%L\) :: %m%n</pattern>
				-->
				%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
			</Pattern>
		</encoder>
	</appender>
	
	<!-- 특정패키지 로깅레벨 설정 --> 
	<logger name="com.skcc.videoCapture" level="DEBUG" additivity="false">
        <appender-ref ref="Console-Appender" />
        <appender-ref ref="File-System-Appender" />
        <appender-ref ref="File-Appender" />
        <appender-ref ref="File-Sql-Appender" />
    </logger>

	<!-- TRACE > DEBUG > INFO > WARN > ERROR, 대소문자 구분 안함 -->
	<!-- profile 을 읽어서 appender 을 설정할수 있다.(phase별 파일을 안만들어도 되는 좋은 기능) -->
	<root level="INFO"><!-- INFO -->
		<appender-ref ref="Console-Appender" />
		<appender-ref ref="File-System-Appender" />
		<appender-ref ref="File-Appender" />
		<appender-ref ref="File-Sql-Appender" />
	</root>
</configuration>